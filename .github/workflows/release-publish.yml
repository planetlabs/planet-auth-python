name: Publish Release

on:
  workflow_call:
    secrets:
      PYPI_API_TOKEN:
      PYPI_API_TOKEN_TEST:

env:
  PYTHON_VERSION: "3.13"

jobs:
  release-pypi-test:
    name: Release package to PyPi (Test)
    runs-on: ubuntu-latest
    # environment: staging
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Prepare common Python build environment
        uses: ./.github/actions/python-build-env-setup
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Download Wheel Package
        uses: actions/download-artifact@v4
        with:
          name: planet-auth-wheel
          # github-token: ${{ secrets.GH_PAT }}
          # repository: '${{ github.repository }}'
          # run-id: '${{ github.run_id }}'
          path: dist
      - name: Download Source Package
        uses: actions/download-artifact@v4
        with:
          name: planet-auth-src-targz
          # github-token: ${{ secrets.GH_PAT }}
          # repository: '${{ github.repository }}'
          # run-id: '${{ github.run_id }}'
          path: dist
      - name: 'Nox: Publish to PyPi'
        env:
          NOX_PYPI_API_TOKEN: ${{ secrets.PYPI_API_TOKEN_TEST }}
        # TODO: re-enable. Disabled for pipeline development - nox -s pkg_publish_pypi_test
        run: |
          false

  # TODO: Add a check some place to refuse to publish an already published version.
  # TODO: Gate actual prod deployment on a manual approval to bonk.
  # TODO: Drop a tag for what we actually ship.
  # TODO: can/should we automatically bump the branch invariant version number after a release?

  #release-pypi-production:
  #  name: Release package to PyPi (Production)
  #  TODO: Copy-pasta-replace the above when all settled.

  release-readthedocs:
    name: Release documentation to readthedocs.com
    runs-on: ubuntu-latest
    # environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Prepare common Python build environment
        uses: ./.github/actions/python-build-env-setup
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Download Built Documentations
        uses: actions/download-artifact@v4
        with:
          name: planet-auth-mkdocs-site
          # github-token: ${{ secrets.GH_PAT }}
          # repository: '${{ github.repository }}'
          # run-id: '${{ github.run_id }}'
          path: site
      - name: 'Nox: Publish to ReadTheDocs'
        run: |
          nox -s mkdocs_publish_readthedocs
